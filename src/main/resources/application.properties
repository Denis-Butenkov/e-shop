spring.application.name=e-shop

# HTTPS settings
server.port=8443
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=${KEY_STORE_PASSWORD}
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=tomcat

# mongo db config
spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI}

# aws s3 config
aws.access.key=${AWS_ACCESS_KEY}
aws.secret.key=${AWS_SECRET_KEY}
aws.region=${AWS_REGION:eu-north-1}
aws.s3.bucket.name=${AWS_S3_BUCKET_NAME}

# multipart config
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# jwt config (10H) 1000 * 60 * 60 * 10 * 10 = 10 hours
jwt.secret.key=${JWT_SECRET_KEY}
jwt.expiration.millis=36000000

# GoPay config (placeholder)
gopay.api.url=${GOPAY_API_URL}
gopay.client.id=${GOPAY_CLIENT_ID}
gopay.client.secret=${GOPAY_CLIENT_SECRET}
gopay.go.id=${MERCHANT_GOPAY_ID}
gopay.callback.return-url=${GOPAY_CALLBACK_RETURN_URL:http://localhost:8080/api/payment/return}
gopay.callback.notify-url=${GOPAY_CALLBACK_NOTIFY_URL:http://localhost:8080/api/payment/notify}

# Redis connection
spring.cache.type=redis
spring.data.redis.host=${SPRING_DATA_REDIS_HOST:localhost}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT:${REDIS_PORT:6379}}

# cache TTL a prefix
spring.cache.redis.time-to-live=3600000
spring.cache.redis.key-prefix=e-shop::